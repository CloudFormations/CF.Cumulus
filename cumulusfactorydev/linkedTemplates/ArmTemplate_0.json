{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cumulusfactorydev"
		},
		"Common_LS_cumulusdatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Common_LS_cumulusdatabase'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=cumulussqlinstancedev.database.windows.net;Initial Catalog=cumulusdatabasedev"
		},
		"Ingest_LS_SQLDB_MIAuth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Ingest_LS_SQLDB_MIAuth'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().LSHostName};Initial Catalog=@{linkedService().LSDatabaseName}"
		},
		"Ingest_LS_SQLDB_SQLAuth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Ingest_LS_SQLDB_SQLAuth'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().LSHostName};Initial Catalog=@{linkedService().LSDatabaseName};User ID=@{linkedService().LSUsername};Password=@{linkedService().LSPassword}"
		},
		"Ingest_LS_Oracle_SIDAuth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Ingest_LS_Oracle_SIDAuth'",
			"defaultValue": "host=@{linkedService().LSHostname};port=@{linkedService().LSPortNumber};sid=@{linkedService().LSOracleSid};user id=@{linkedService().LSUsername};Password=@{linkedService().LSPassword}"
		},
		"Ingest_LS_SQLServer_SQLAuth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Ingest_LS_SQLServer_SQLAuth'",
			"defaultValue": "Integrated Security=False;Data Source=@{linkedService().LSHostName};Initial Catalog=@{linkedService().LSDatabaseName};User ID=@{linkedService().LSUsername};Password=@{linkedService().LSPassword}"
		},
		"Ingest_LS_SQLServer_WinAuth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Ingest_LS_SQLServer_WinAuth'",
			"defaultValue": "Integrated Security=True;Data Source=@{linkedService().LSHostName};Initial Catalog=@{linkedService().LSDatabaseName}"
		},
		"Common_LS_cumuluskeys_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://cumuluskeysdev.vault.azure.net/"
		},
		"Ingest_LS_DataLake_MIAuth_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://',linkedService().LSStorageName,'.dfs.core.windows.net/')}"
		},
		"Ingest_LS_Databricks_Cluster_MIAuth_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "@linkedService().ClusterId"
		},
		"Common_LS_cumulusfunctions_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://cumulusfunctionappdev.azurewebsites.net"
		},
		"Ingest_LS_FileServer_VM02_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().LSHostName}"
		},
		"Ingest_LS_FileServer_VM02_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "@{linkedService().LSUserName}"
		},
		"Ingest_LS_SQLServer_WinAuth_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().LSUsername}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Common_LS_cumulusdatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection between ADF and processing framework metadata SQLDB.",
				"annotations": [
					"Cloud Formations",
					"CF.Cumulus",
					"Common"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Common_LS_cumulusdatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Common_LS_cumuluskeys')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to Key Vault for all other ADF linked service credentials required to run the processing framework.",
				"annotations": [
					"Cloud Formations",
					"CF.Cumulus",
					"Common"
				],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Common_LS_cumuluskeys_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_DataLake_MIAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LSStorageName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Ingest_LS_DataLake_MIAuth_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_Databricks_Cluster_MIAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkspaceURL": {
						"type": "string"
					},
					"ResourceGroupName": {
						"type": "string"
					},
					"ResourceName": {
						"type": "string"
					},
					"ClusterId": {
						"type": "string"
					},
					"SubscriptionId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@linkedService().WorkspaceURL",
					"authentication": "MSI",
					"workspaceResourceId": "@concat('/subscriptions/',linkedService().SubscriptionId,'/resourceGroups/',linkedService().ResourceGroupName,'/providers/Microsoft.Databricks/workspaces/',linkedService().ResourceName)",
					"existingClusterId": "[parameters('Ingest_LS_Databricks_Cluster_MIAuth_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_Databricks_JobCluster_MIAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkspaceURL": {
						"type": "string"
					},
					"ClusterVersion": {
						"type": "string"
					},
					"NodeType": {
						"type": "string"
					},
					"PythonVersion": {
						"type": "string",
						"defaultValue": "Unused"
					},
					"NumWorkers": {
						"type": "string"
					},
					"SubscriptionId": {
						"type": "string"
					},
					"ResourceName": {
						"type": "string"
					},
					"ResourceGroupName": {
						"type": "string"
					}
				},
				"annotations": [
					"JobCluster"
				],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "@linkedService().WorkspaceURL",
					"authentication": "MSI",
					"workspaceResourceId": "@concat('/subscriptions/',linkedService().SubscriptionId,'/resourceGroups/',linkedService().ResourceGroupName,'/providers/Microsoft.Databricks/workspaces/',linkedService().ResourceName)",
					"newClusterNodeType": "@linkedService().NodeType",
					"newClusterNumOfWorker": "@linkedService().NumWorkers",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "@linkedService().ClusterVersion",
					"clusterOption": "Autoscaling",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_SQLDB_MIAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LSHostName": {
						"type": "string"
					},
					"LSDatabaseName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Ingest_LS_SQLDB_MIAuth_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_SQLDB_SQLAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LSHostName": {
						"type": "string"
					},
					"LSDatabaseName": {
						"type": "string"
					},
					"LSUsername": {
						"type": "string"
					},
					"LSPassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Ingest_LS_SQLDB_SQLAuth_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FunctionalTestingTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Used for functional testing of the framework in a dedicated environment.",
				"annotations": [
					"procfwk"
				],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 2,
						"startTime": "2020-04-06T15:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasourceVM02')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fr",
							"value": "sdfsdfsd"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"fr": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cumulus.Control"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSetMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Single generic dataset used to get and set all database metadata.",
				"linkedServiceName": {
					"referenceName": "Common_LS_cumulusdatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Cumulus"
				},
				"annotations": [
					"Cloud Formations",
					"CF.Cumulus",
					"Common"
				],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Common_LS_cumulusdatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_DS_DataLake_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ingest_LS_DataLake_MIAuth",
					"type": "LinkedServiceReference",
					"parameters": {
						"LSStorageName": {
							"value": "@dataset().DSStorageName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DSDirectory": {
						"type": "string"
					},
					"DSFileName": {
						"type": "string"
					},
					"DSStorageName": {
						"type": "string"
					},
					"DSContainerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ingest"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DSFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DSDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DSContainerName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ingest_LS_DataLake_MIAuth')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_DS_DataLake_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ingest_LS_DataLake_MIAuth",
					"type": "LinkedServiceReference",
					"parameters": {
						"LSStorageName": {
							"value": "@dataset().DSStorageName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DSStorageName": {
						"type": "string"
					},
					"DSContainerName": {
						"type": "string"
					},
					"DSDirectoryName": {
						"type": "string"
					},
					"DSFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ingest"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().DSFileName,'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DSDirectoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DSContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ingest_LS_DataLake_MIAuth')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_DS_SQLDB_MIAuth')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ingest_LS_SQLDB_MIAuth",
					"type": "LinkedServiceReference",
					"parameters": {
						"LSHostName": {
							"value": "@dataset().DSHostname",
							"type": "Expression"
						},
						"LSDatabaseName": {
							"value": "@dataset().DSDatabaseName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DSHostname": {
						"type": "string"
					},
					"DSDatabaseName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ingest"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ingest_LS_SQLDB_MIAuth')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_DS_SQLDB_SQLAuth')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ingest_LS_SQLDB_SQLAuth",
					"type": "LinkedServiceReference",
					"parameters": {
						"LSHostName": {
							"value": "@dataset().DSHostName",
							"type": "Expression"
						},
						"LSDatabaseName": {
							"value": "@dataset().DSDatabaseName",
							"type": "Expression"
						},
						"LSUsername": {
							"value": "@dataset().DSUsername",
							"type": "Expression"
						},
						"LSPassword": {
							"value": "@dataset().DSPassword",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DSHostName": {
						"type": "string"
					},
					"DSDatabaseName": {
						"type": "string"
					},
					"DSUsername": {
						"type": "string"
					},
					"DSPassword": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ingest"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ingest_LS_SQLDB_SQLAuth')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Common_LS_cumulusfunctions')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Interact with the Azure Functions App used as middle ware when making requests to Worker pipelines. Authentication done at the Function App level.",
				"annotations": [
					"Cloud Formations",
					"CF.Cumulus",
					"Common"
				],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('Common_LS_cumulusfunctions_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Common_LS_cumuluskeys",
							"type": "LinkedServiceReference"
						},
						"secretName": "cumulusfunctionsKey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Common_LS_cumuluskeys')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_FileServer_VM02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Files on DataSourceVM02, using SHIR of same name on this VM.",
				"parameters": {
					"LSHostName": {
						"type": "string"
					},
					"LSUserName": {
						"type": "string"
					},
					"LSPassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('Ingest_LS_FileServer_VM02_properties_typeProperties_host')]",
					"userId": "[parameters('Ingest_LS_FileServer_VM02_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Common_LS_cumuluskeys",
							"type": "LinkedServiceReference"
						},
						"secretName": "vmadminpassword"
					}
				},
				"connectVia": {
					"referenceName": "datasourceVM02",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/datasourceVM02')]",
				"[concat(variables('factoryId'), '/linkedServices/Common_LS_cumuluskeys')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_Oracle_SIDAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LSHostname": {
						"type": "string"
					},
					"LSUsername": {
						"type": "string"
					},
					"LSOracleSid": {
						"type": "string"
					},
					"LSPortNumber": {
						"type": "string"
					},
					"LSPassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Ingest_LS_Oracle_SIDAuth_connectionString')]"
				},
				"connectVia": {
					"referenceName": "datasourceVM02",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/datasourceVM02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_SQLServer_SQLAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LSHostName": {
						"type": "string"
					},
					"LSDatabaseName": {
						"type": "string"
					},
					"LSUsername": {
						"type": "string"
					},
					"LSPassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Ingest_LS_SQLServer_SQLAuth_connectionString')]"
				},
				"connectVia": {
					"referenceName": "datasourceVM02",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/datasourceVM02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_LS_SQLServer_WinAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"LSHostName": {
						"type": "string"
					},
					"LSDatabaseName": {
						"type": "string"
					},
					"LSUsername": {
						"type": "string"
					},
					"LSPassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Ingest_LS_SQLServer_WinAuth_connectionString')]",
					"userName": "[parameters('Ingest_LS_SQLServer_WinAuth_properties_typeProperties_userName')]",
					"password": "@{linkedService().LSPassword}"
				},
				"connectVia": {
					"referenceName": "datasourceVM02",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/datasourceVM02')]"
			]
		}
	]
}