{
	"name": "Ingest_PL_RESTAPI",
	"properties": {
		"activities": [
			{
				"name": "Get Ingest Payload",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT\n\tc.ConnectionLocation,\n\t'full' AS LoadAction,\n\tc.ConnectionDisplayName,\n\tds.DatasetDisplayName,\n\tds.VersionNumber,\n\tc.LinkedServiceName,\n\tds.LoadType,\n\tds.SourcePath,\n\tds.SourceName,\n\tc.username,\n\tc.keyvaultsecret,\n\tCASE \n\t\tWHEN ds.DatasetId = 2 THEN 'Authorization: POPULATE_TOKEN'\n\t\tWHEN ds.DatasetId = 1 THEN ''\n\t\tELSE ''\n\tEND AS SourceQuery,\n    --cn2.[ConnectionLocation] AS 'TargetStorageName',\n    --cn2.[SourceLocation] AS 'TargetStorageContainer',\n\t'cfcdemodevdlsuks01' AS 'TargetStorageName',\n    'raw' AS 'TargetStorageContainer'\nFROM ingest.Datasets AS ds\nINNER JOIN ingest.Connections AS c\n--ON ds.ConnectionFK = c.ConnectionId\nON c.ConnectionId = 4\nINNER JOIN ingest.ComputeConnections AS cc\nON ds.MergeComputeConnectionFK = cc.ComputeConnectionId\nWHERE\n    [DatasetId] = 3\n    AND \n        ds.[Enabled] = 1\n    AND \n        c.[Enabled] = 1\n\t\t",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "GetSetMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set Run DateTime",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "LocalRunDateTime",
					"value": {
						"value": "@if(equals(pipeline().parameters.RunDateTime,' '),string(utcnow()),pipeline().parameters.RunDateTime)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Target Path",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Run DateTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TargetPath",
					"value": {
						"value": "@formatDateTime(variables('LocalRunDateTime'), '\\ye\\ar=yyyy/\\mon\\t\\h=MM/\\d\\a\\y=dd/\\hour=HH')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set LoadType",
				"description": "Set the Data Load type:\nIncremental Load = 1\nFull Load = 0",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "LoadType",
					"value": {
						"value": "@activity('Get Ingest Payload').output.firstRow.LoadAction",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Directory Path",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Target Path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set LoadType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "DirectoryName",
					"value": {
						"value": "@concat(\n    activity('Get Ingest Payload').output.firstRow.ConnectionDisplayName,\n    '\\',\n    activity('Get Ingest Payload').output.firstRow.DatasetDisplayName,\n    '\\',\n    'version=',\n    activity('Get Ingest Payload').output.firstRow.VersionNumber,\n    '\\',\n    variables('LoadType'),\n    '\\',\n    variables('TargetPath')\n    )",
						"type": "Expression"
					}
				}
			},
			{
				"name": "REST API Auth Type",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Set Directory Path",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@replace(activity('Get Ingest Payload').output.firstRow.LinkedServiceName,'Ingest_LS_','')",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "RESTAPI_HTTPS_AnonAuth",
							"activities": [
								{
									"name": "REST API HTTP AnonAuth Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Fetch Bearer Token HTTPS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@replace(activity('Get Ingest Payload').output.firstRow.SourceQuery,'POPULATE_TOKEN',activity('Fetch Bearer Token HTTPS').output.value)",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Ingest_DS_JSON_HTTP_AnonAuth",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@concat('/',activity('Get Ingest Payload').output.firstRow.SourcePath,'/',activity('Get Ingest Payload').output.firstRow.SourceName)",
													"type": "Expression"
												},
												"BaseURL": {
													"value": "@activity('Get Ingest Payload').output.firstRow.ConnectionLocation",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingest_DS_DataLake_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DSStorageName": {
													"value": "@activity('Get Ingest Payload').output.firstRow.TargetStorageName",
													"type": "Expression"
												},
												"DSContainerName": {
													"value": "@activity('Get Ingest Payload').output.firstRow.TargetStorageContainer",
													"type": "Expression"
												},
												"DSDirectoryName": {
													"value": "@variables('DirectoryName')",
													"type": "Expression"
												},
												"DSFileName": {
													"value": "@activity('Get Ingest Payload').output.firstRow.DatasetDisplayName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Fetch Bearer Token HTTPS",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"url": {
											"value": "@concat(activity('Get Ingest Payload').output.firstRow.KeyVaultSecret,'?api-version=7.0')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://vault.azure.net"
										}
									}
								}
							]
						},
						{
							"value": "RESTAPI_REST_AnonAuth",
							"activities": [
								{
									"name": "REST API REST AnonAuth Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Fetch Bearer Token",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Authorization": {
													"value": "@activity('Fetch Bearer Token').output.value",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Ingest_DS_REST",
											"type": "DatasetReference",
											"parameters": {
												"BaseURL": {
													"value": "@activity('Get Ingest Payload').output.firstRow.ConnectionLocation",
													"type": "Expression"
												},
												"RelativeURL": {
													"value": "@concat('/',activity('Get Ingest Payload').output.firstRow.SourcePath,'/',activity('Get Ingest Payload').output.firstRow.SourceName)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingest_DS_DataLake_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DSStorageName": {
													"value": "@activity('Get Ingest Payload').output.firstRow.TargetStorageName",
													"type": "Expression"
												},
												"DSContainerName": {
													"value": "@activity('Get Ingest Payload').output.firstRow.TargetStorageContainer",
													"type": "Expression"
												},
												"DSDirectoryName": {
													"value": "@variables('DirectoryName')",
													"type": "Expression"
												},
												"DSFileName": {
													"value": "@activity('Get Ingest Payload').output.firstRow.DatasetDisplayName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Fetch Bearer Token",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"url": {
											"value": "@concat(activity('Get Ingest Payload').output.firstRow.KeyVaultSecret,'?api-version=7.0')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://vault.azure.net"
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Supported Linked Service Type",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@concat('The Linked Service type and authentication combination is not currently supported.')",
									"type": "Expression"
								},
								"errorCode": "16"
							}
						}
					]
				}
			},
			{
				"name": "Update Metadata Load Status",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "REST API Auth Type",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ingest].[SetIngestLoadStatus]",
					"storedProcedureParameters": {
						"DatasetId": {
							"value": {
								"value": "@pipeline().parameters.DatasetId",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"IngestStage": {
							"value": "Raw",
							"type": "String"
						},
						"LoadType": {
							"value": {
								"value": "@activity('Get Ingest Payload').output.firstRow.LoadType",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileLoadDateTime": {
							"value": {
								"value": "@variables('LocalRunDateTime')",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Common_LS_cumulusdatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup result",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "REST API Auth Type",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "Ingest_DS_DataLake_JSON",
						"type": "DatasetReference",
						"parameters": {
							"DSStorageName": {
								"value": "@activity('Get Ingest Payload').output.firstRow.TargetStorageName",
								"type": "Expression"
							},
							"DSContainerName": {
								"value": "@activity('Get Ingest Payload').output.firstRow.TargetStorageContainer",
								"type": "Expression"
							},
							"DSDirectoryName": {
								"value": "@variables('DirectoryName')",
								"type": "Expression"
							},
							"DSFileName": {
								"value": "@activity('Get Ingest Payload').output.firstRow.DatasetDisplayName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set Authorization",
				"description": "Get Authorization value from LoadClause JSON",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Authorization",
					"value": {
						"value": "@json(activity('Get Ingest Payload').output.firstRow.SourceQuery).Authorization",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Relative URL Parameter String",
				"description": "Get RelURLParameterString value from LoadClause JSON",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RelativeURLParameterString",
					"value": {
						"value": "@json(activity('Get Ingest Payload').output.firstRow.SourceQuery).RelURLParameterString",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Request Body",
				"description": "Get Request Body value from LoadClause JSON",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RequestBody",
					"value": {
						"value": "@json(activity('Get Ingest Payload').output.firstRow.SourceQuery).RequestBody",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Headers",
				"description": "Get Headers value from LoadClause JSON",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Headers",
					"value": {
						"value": "@json(activity('Get Ingest Payload').output.firstRow.SourceQuery).Headers",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"RunDateTime": {
				"type": "string",
				"defaultValue": " "
			},
			"DatasetId": {
				"type": "int"
			}
		},
		"variables": {
			"DirectoryName": {
				"type": "String"
			},
			"LoadType": {
				"type": "String"
			},
			"TargetPath": {
				"type": "String"
			},
			"LocalRunDateTime": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Cumulus.Ingest"
		},
		"annotations": []
	}
}