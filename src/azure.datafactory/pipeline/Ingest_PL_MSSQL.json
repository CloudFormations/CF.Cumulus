{
	"name": "Ingest_PL_MSSQL",
	"properties": {
		"activities": [
			{
				"name": "Copy SQL Server Data VM02",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Target Path",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerDatasetGeneric",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.Payload.ConnectionLocation",
								"type": "Expression"
							},
							"DatabaseName": {
								"value": "@pipeline().parameters.Payload.SourceLocation",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.Payload.AkvUserName",
								"type": "Expression"
							},
							"Password": {
								"value": "@pipeline().parameters.Payload.AkvPasswordName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.Payload.SourcePath",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.Payload.SourceName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetDataLakeDatasetGeneric",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": "raw",
							"Directory": {
								"value": "@concat(pipeline().parameters.Payload.ConnectionDisplayName,'/',pipeline().parameters.Payload.DatasetDisplayName,'/Version=',pipeline().parameters.Payload.VersionNumber,'/',pipeline().parameters.DateTimeHierarchy)",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.Payload.SourceName",
								"type": "Expression"
							},
							"AccountName": "cumulusframeworkdev"
						}
					}
				]
			},
			{
				"name": "Get Ingest Payload",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[ingest].[GetDatasetPayload]",
						"storedProcedureParameters": {
							"DatasetId": {
								"type": "Int16",
								"value": {
									"value": "@pipeline().parameters.DatasetId",
									"type": "Expression"
								}
							},
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "GetSetMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set Run DateTime",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "LocalRunDateTime",
					"value": {
						"value": "@if(equals(pipeline().parameters.RunDateTime,' '),string(utcnow()),pipeline().parameters.RunDateTime)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Target Path",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Run DateTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TargetPath",
					"value": {
						"value": "@formatDateTime(variables('LocalRunDateTime'), '\\ye\\ar=yyyy/\\mon\\t\\h=MM/\\d\\a\\y=dd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "MS SQL Type",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Get Ingest Payload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@replace(activity('Get Ingest Payload').output.firstRow.LinkedServiceName,'Ingest_LS_','')",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "SQLDB_MIAuth",
							"activities": [
								{
									"name": "SQLDB MI Copy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Ingest_DS_SQLDB_MIAuth",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			}
		],
		"parameters": {
			"DatasetId": {
				"type": "int",
				"defaultValue": 0
			},
			"RunDateTime": {
				"type": "string",
				"defaultValue": " "
			}
		},
		"variables": {
			"LocalRunDateTime": {
				"type": "String"
			},
			"TargetPath": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Cumulus.Ingest"
		},
		"annotations": []
	}
}