{
	"name": "02-SqlServerExecutor",
	"properties": {
		"activities": [
			{
				"name": "Copy SQL Server Data VM02",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerDatasetGeneric",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.Payload.ConnectionLocation",
								"type": "Expression"
							},
							"DatabaseName": {
								"value": "@pipeline().parameters.Payload.SourceLocation",
								"type": "Expression"
							},
							"UserName": {
								"value": "@pipeline().parameters.Payload.AkvUserName",
								"type": "Expression"
							},
							"Password": {
								"value": "@pipeline().parameters.Payload.AkvPasswordName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.Payload.SourcePath",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.Payload.SourceName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetDataLakeDatasetGeneric",
						"type": "DatasetReference",
						"parameters": {
							"FileSystem": "raw",
							"Directory": {
								"value": "@concat(pipeline().parameters.Payload.ConnectionDisplayName,'/',pipeline().parameters.Payload.DatasetDisplayName,'/Version=',pipeline().parameters.Payload.VersionNumber,'/',pipeline().parameters.DateTimeHierarchy)",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.Payload.SourceName",
								"type": "Expression"
							},
							"AccountName": "cumulusframeworkdev"
						}
					}
				]
			}
		],
		"parameters": {
			"Payload": {
				"type": "object"
			},
			"DateTimeHierarchy": {
				"type": "string"
			},
			"IncrementalLoad": {
				"type": "int"
			}
		},
		"folder": {
			"name": "Cumulus.Ingest"
		},
		"annotations": []
	}
}