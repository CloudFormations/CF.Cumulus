name: CF.Cumulus-Databricks-CICD

concurrency: 1

on:
  workflow_dispatch:


jobs:
  deploy_dev:
    name: "Deploy dev"
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: ./src/azure.databricks/python/notebooks

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade pip
      - run: pip install wheel
      - run: pip3 install wheel
      - run: pip install -r requirements.txt
      - run: |
            pip install databricks-cli 
            echo "[dev]" >> ~/.databrickscfg
            echo "host = ${{ secrets.DATABRICKS_HOST }}" >> ~/.databrickscfg
            echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg

      - name: Cleanup old code
        uses: databricks/setup-cli@main

      - run: databricks workspace delete /Workspace/Live/ --force
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev

      - name: Deploy DAB
        uses: databricks/setup-cli@main

      - run: databricks bundle deploy --target dev
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev

  deploy_test:
    needs: deploy_dev
    name: "Deploy test"
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: ./src/azure.databricks/python/notebooks

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade pip
      - run: pip install wheel
      - run: pip3 install wheel
      - run: pip install -r requirements.txt
      - run: |
            pip install databricks-cli 
            echo "[test]" >> ~/.databrickscfg
            echo "host = ${{ secrets.DATABRICKS_HOST }}" >> ~/.databrickscfg
            echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg

      - name: Cleanup old code
        uses: databricks/setup-cli@main

      - run: databricks workspace delete /Workspace/Live/ --force
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: test

      - name: Deploy DAB
        uses: databricks/setup-cli@main

      - run: databricks bundle deploy --target test
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: test


  deploy_prod:
    needs: deploy_test
    name: "Deploy prod"
    runs-on: ubuntu-latest
    environment: prod
    defaults:
      run:
        working-directory: ./src/azure.databricks/python/notebooks

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade pip
      - run: pip install wheel
      - run: pip3 install wheel
      - run: pip install -r requirements.txt
      - run: |
            pip install databricks-cli 
            echo "[prod]" >> ~/.databrickscfg
            echo "host = ${{ secrets.DATABRICKS_HOST }}" >> ~/.databrickscfg
            echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg

      - name: Cleanup old code
        uses: databricks/setup-cli@main

      - run: databricks workspace delete /Workspace/Live/ --force
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: prod

      - name: Deploy DAB
        uses: databricks/setup-cli@main

      - run: databricks bundle deploy --target prod
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: prod